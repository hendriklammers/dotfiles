snippet /** "Comment block" b
/**
 * ${1:Description}
 */
endsnippet

snippet str "Use strict mode"
'use strict'$1
endsnippet

snippet log "console.log()"
console.log($1)$0
endsnippet

snippet iife "immediately-invoked function expression"
(() => {
	$1
})()
endsnippet

snippet iifa "async immediately-invoked function expression"
(async () => {
	$1
})()
endsnippet

snippet fun "function"
function ${1:functionName}(${2:arguments}) {
	${3:// body...}
}
endsnippet

snippet if "if statement"
if (${1:true}) {
	$2
}
endsnippet

snippet ife "if...else"
if (${1:true}) {
	$2
} else {
	$3
}
endsnippet

snippet sw "switch statement" b
switch ($1) {
	case $2:
		$3
		break
	default:
		$0
}
endsnippet

snippet for "For loop"
for (let ${1:i} = 0; $1 < ${2:amount}; $1++) {
	$0
}
endsnippet

snippet req "Require node/commonjs module"
require('$1')$0
endsnippet

snippet mod "node/commonjs module" b
module.exports = function($1) {
	$2
}
endsnippet

# JSDoc snippets
snippet /* "A JSDoc comment" b
/**
 * ${1:${VISUAL}}$0
 */
endsnippet

snippet @p "@param {Type} varname Description"
@param {${1:Type}} ${2:varname} ${3:Description}
endsnippet

snippet @ret "@return {Type} Description"
@return {${1:Type}} ${2:Description}
endsnippet

snippet imp "ES6 module import" b
import $2 from '$1'$0
endsnippet

snippet forof "for of loop"
for (let ${1:s} of ${2:sequence}) {
	${3}
}
endsnippet

snippet af "arrow function" b
const $1 = ($2) => $0
endsnippet

snippet af "arrow function"
($1) => $0
endsnippet

snippet async "async function"
async ($1) => ${2:\{$0\}}
endsnippet

snippet prom "Promise"
new Promise((resolve, reject) => {
	$0
})
endsnippet

snippet try "try/catch" b
try {
	$0
} catch (err) {
	console.error(err)
}
endsnippet

snippet #! "shebang"
#!/usr/bin/env node
endsnippet
