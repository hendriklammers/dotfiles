snippet /** "Comment block" b
/**
 * ${1:Description}
 */
endsnippet

snippet str "Use jshint/jslint strict mode"
'use strict'$1
endsnippet

snippet log "console.log()"
console.log($1)
endsnippet

snippet iife "immediately-invoked function expression"
(function() {
	$1
}());
endsnippet

snippet fun "function"
function ${1:functionName}(${2:arguments}) {
	${3:// body...}
}
endsnippet

snippet af "anonymous function" w
function($1) {
	$0
}${2:;}
endsnippet

snippet if "if statement"
if (${1:true}) {
	$2
}
endsnippet

snippet ife "if...else"
if (${1:true}) {
	$2
} else {
	$3
}
endsnippet

snippet for "For loop"
for (let ${1:i} = 0; $1 < ${2:amount}; $1++) {
	$0
}
endsnippet

snippet ret "return"
return $1;$0
endsnippet

snippet req "Require node/commonjs module"
require('$1')$0
endsnippet

snippet mod "node/commonjs module" b
module.exports = function($1) {
	$2
};
endsnippet

# JSDoc snippets
snippet /* "A JSDoc comment" b
/**
 * ${1:${VISUAL}}$0
 */
endsnippet

snippet @p "@param {Type} varname Description"
@param {${1:Type}} ${2:varname} ${3:Description}
endsnippet

snippet @ret "@return {Type} Description"
@return {${1:Type}} ${2:Description}
endsnippet

# Gulp snippets
snippet gut "gulp task" b
gulp.task('${1:name}', function() {
	$2
});
endsnippet

snippet gus "gulp src" b
gulp.task('${1:name}', function() {
	return gulp.src('${2:path}')
		.pipe(${3:plugin}($4))$5
});
endsnippet

snippet guw "gulp watch" b
gulp.task('watch', function() {
	gulp.watch('${1:path}', ['${2:task}']);$3
});
endsnippet

snippet gup "gulp pipe"
.pipe(${1:plugin}($2))$0
endsnippet
