#!/bin/bash
#
# Starts a new project

PS3='Project type: '
select opt in Elm Node
do
  case $opt in
    "Elm")
      projectType="elm"
      break
      ;;
    "Node")
      projectType="node"
      break
      ;;
    *) echo "invalid option $REPLY";;
  esac
done

while [ -z "$projectTitle" ]
do
  read -p "Title: " input;
  if [[ ! "$input" =~ ^[a-zA-Z0-9-]{3,}$ ]]; then
    echo "Invalid project title";
  elif [ -d "$input" ]; then
    echo "Directory with this title already exists";
  else
    projectTitle="$input"
  fi
done

read -p "Description: " projectDescription;

while [ -z $githubRepo ]
do
  read -p "Create a new repository on Github? [Y/n]" -n 1 choice
  case $choice in
    y|Y|"") githubRepo=true;;
    n|N) githubRepo=false;;
    *) echo " invalid option";;
  esac
done
echo ""

mkdir -p "$projectTitle"
cd "$projectTitle"

case "$projectType" in
  "elm")
    repo=git@github.com:hendriklammers/elm-project-starter.git
    ;;
  "node")
    repo=git@github.com:hendriklammers/node-project-starter.git
    ;;
  *) echo >&2 "No repo available for this project type"; exit 1
esac
git clone "$repo" .
echo ""

# Use install script from repo to install dependencies
if [[ -f "install.sh" ]]; then
  echo "Installing dependencies"
  ./install.sh
  rm install.sh
fi

for file in package.json package-lock.json index.html README.md; do
  if [[ -f "$file" ]]; then
    sed -i"" "s/PROJECT_TITLE/$projectTitle/g; \
      s/PROJECT_DESCRIPTION/$projectDescription/g;" $file
  fi
done

# Start with a fresh git repo
if [ -d ".git" ]; then
  rm -rf .git
fi
git init && git add . && git commit -m "Initial commit"
echo ""

if [ "$githubRepo" = true ]; then
  if ! [ -x $(command -v hub) ]; then
    echo >&2 "hub is not installed."; exit 1
  fi
  hub create -p $projectTitle -d "$projectDescription"
  # git push -u origin master
fi
